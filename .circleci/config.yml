#  Sonatype Nexus (TM) Open Source Version
#  Copyright (c) 2020-present Sonatype, Inc.
#  All rights reserved. Includes the third-party code listed at http://links.sonatype.com/products/nexus/oss/attributions.
#
#  Sonatype Nexus (TM) Professional Version is available from Sonatype, Inc. "Sonatype" and "Sonatype Nexus" are trademarks
#  of Sonatype, Inc. Apache Maven is a trademark of the Apache Software Foundation. M2eclipse is a trademark of the
#  Eclipse Foundation. All other trademarks are the property of their respective owners.
version: 2.1
orbs:
  orb-tools: circleci/orb-tools@9.0
  circleci-maven-release-orb: sonatype-nexus-community/circleci-maven-release-orb@<<pipeline.parameters.dev-orb-version>>

my-orb-name: &MY_ORB_NAME
  orb-name: sonatype-nexus-community/circleci-maven-release-orb

my-orb-ref: &MY_ORB_REF
  orb-ref: sonatype-nexus-community/circleci-maven-release-orb

# Pipeline parameters
parameters:
  # These pipeline parameters are required by the "trigger-integration-tests-workflow"
  # job, by default.
  run-integration-tests:
    type: boolean
    default: false
  dev-orb-version:
    type: string
    # during active development of this orb, the default version below should be: "dev:alpha"
    default: "dev:alpha"
    #default: "0.0.15"

jobs:
  job-check-results:
    executor: circleci-maven-release-orb/maven-executor
    steps:
      - attach_workspace:
          at: .
      - restore_cache:
          key: maven-release-orb-{{ checksum ".circleci/config.yml" }}
      - run:
          name: Check results
          command: |
            FAILED_CHECK=false
            echo "Checking gpg setup..."
            gpgDir=/home/circleci/.gnupg
            if [ ! -d "$gpgDir" ]; then
              echo "Missing gpg dir: $gpgDir"
              FAILED_CHECK=true
            fi
            gpgPubKeyFile="$gpgDir/pubring.kbx"
            if [ ! -f "$gpgPubKeyFile" ]; then
              echo "Missing gpg pub key file: $gpgPubKeyFile"
              FAILED_CHECK=true
            fi

            echo "Checking git setup..."
            gitUser=$(git config user.name)
            if [ -z "$gitUser" ]; then
              echo "Missing git user name: $gitUser"
              FAILED_CHECK=true
            fi
            gitEmail=$(git config user.email)
            if [ -z "$gitEmail" ]; then
              echo "Missing git email address: $gitEmail"
              FAILED_CHECK=true
            fi

            #releasePropsFile=release.properties
            #if [ ! -f "releasePropsCreated" ]; then
            #  echo "Missing release properties file creation marker: releasePropsCreated"
            #  FAILED_CHECK=true
            #fi

            if [ "$FAILED_CHECK" = true ]; then
              echo "Exiting with failure: $FAILED_CHECK"
              exit 1
            fi

workflows:
  lint_pack-validate_publish-dev:
    unless: << pipeline.parameters.run-integration-tests >>
    jobs:
      # this `lint-pack_validate_publish-dev` workflow will run on any commit
      - orb-tools/lint

      # pack your orb YAML files to a single orb.yml
      # validate the orb.yml file to ensure it is well-formed
      - orb-tools/pack:
          requires:
            - orb-tools/lint

      # release dev version of orb, for testing & possible publishing
      # requires a CircleCI API token to be stored as CIRCLE_TOKEN (default)
      # https://circleci.com/docs/2.0/managing-api-tokens
      # store CIRCLE_TOKEN as a project env var or Contexts resource
      # if using Contexts, add your context below
      - orb-tools/publish-dev:
          <<: *MY_ORB_NAME
          requires:
            - orb-tools/pack

      # trigger an integration workflow to test the
      # dev:${CIRCLE_SHA1:0:7} version of your orb
      - orb-tools/trigger-integration-tests-workflow:
          name: trigger-integration-dev
          requires:
            - orb-tools/publish-dev

  # This `integration-tests` workflow will only run
  # when the run-integration-tests pipeline parameter is set to true.
  # It is meant to be triggered by the "trigger-integration-tests-workflow"
  # job, and run tests on <your orb>@dev:${CIRCLE_SHA1:0:7}.
  integration-tests:
    when: << pipeline.parameters.run-integration-tests >>
    jobs:
      # integration tests
      # NOTE: When the Orb parameters change drastically, you may need to temporarily comment out this IT section to
      # allow the build to republish the new dev Orb. After a CI run completes with this IT section, you can restore
      # this IT section. Another approach may be to manually republish the dev Orb from you local machine when needed.
      - circleci-maven-release-orb/run-maven-release:
            mvn-read-version-command: mvn -q -Dexec.executable="echo" -Dexec.args='${project.version}' --non-recursive exec:exec -f test/pom.xml
            mvn-release-prepare-command: mvn --batch-mode release:prepare -DdryRun=true -f test/pom.xml
            mvn-release-perform-command: mvn --batch-mode release:perform -DdryRun=true -s test/.maven.xml -f test/pom.xml
            context: rso-base
      - job-check-results:
            requires:
              - circleci-maven-release-orb/run-maven-release

  # This workflow exists only to simplify running local IT builds, therefore it need never run on the CI server.
  wf_integration-test:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              ignore: /.*/
    jobs:
      # change the line below to run the IT job of your choice
      - job-check-results

  promote-patch:
    jobs:
      - approve-release:
          filters:
            branches:
              only: master
          type: approval

      - orb-tools/lint:
          requires:
            - approve-release
      - orb-tools/pack:
          requires:
            - orb-tools/lint
      - orb-tools/publish-dev:
          <<: *MY_ORB_NAME
          requires:
            - orb-tools/pack
      - orb-tools/increment:
          filters:
            branches:
              only: master
          attach-workspace: true
          <<: *MY_ORB_REF
          requires:
            - orb-tools/publish-dev
      - orb-tools/dev-promote-prod-from-commit-subject:
          add-pr-comment: false
          fail-if-semver-not-indicated: false
          filters:
            branches:
              only: master
          <<: *MY_ORB_NAME
          publish-version-tag: true
          ssh-fingerprints: "b7:5b:6c:b5:81:8e:dc:2b:fd:fe:27:34:a7:96:d7:22"
          requires:
            - orb-tools/increment
