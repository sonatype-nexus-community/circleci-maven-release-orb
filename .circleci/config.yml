version: 2.1
orbs:
  orb-tools: circleci/orb-tools@8.27.4
  circleci-maven-release-orb: sonatype-nexus-community/circleci-maven-release-orb@dev:alpha

jobs:
  check-results-job:
    executor: circleci-maven-release-orb/maven-executor
    steps:
      #- checkout
      - attach_workspace:
          at: .
      #- restore_cache:
      #    key: maven-release-orb-{{ checksum ".circleci/config.yml" }}
      #- my-inline-maven-release-orb/run-maven-release
      #- circleci-maven-release-orb/run-maven-release
      #- run-maven-release
      - run:
          name: Check results
          command: |
            FAILED_CHECK=false
            echo "Checking gpg setup..."
            gpgDir=/home/circleci/.gnupg
            if [ ! -d "$gpgDir" ]; then
              echo "Missing gpg dir: $gpgDir"
              FAILED_CHECK=true
            fi
            gpgPubKeyFile="$gpgDir/pubring.kbx"
            if [ ! -f "$gpgPubKeyFile" ]; then
              echo "Missing gpg pub key file: $gpgPubKeyFile"
              FAILED_CHECK=true
            fi

            echo "Checking git setup..."
            knownHosts=~/.ssh/known_hosts
            if [ ! -f "$knownHosts" ]; then
              echo "Missing knownHosts file: $knownHosts"
              FAILED_CHECK=true
            fi
            gitUser=$(git config user.name)
            if [ -z "$gitUser" ]; then
              echo "Missing git user name: $gitUser"
              FAILED_CHECK=true
            fi
            gitEmail=$(git config user.email)
            if [ -z "$gitEmail" ]; then
              echo "Missing git email address: $gitEmail"
              FAILED_CHECK=true
            fi

            #releasePropsFile=release.properties
            #if [ ! -f "releasePropsCreated" ]; then
            #  echo "Missing release properties file creation marker: releasePropsCreated"
            #  FAILED_CHECK=true
            #fi

            if [ "$FAILED_CHECK" = true ]; then
              echo "Exiting with failure: $FAILED_CHECK"
              exit 1
            fi

mvn-read-version-command: &mvn-read-version-command-dryRun-custom
  mvn-read-version-command: mvn -q -Dexec.executable="echo" -Dexec.args='${project.version}' --non-recursive exec:exec -f test/pom.xml

mvn-release-prepare-command: &mvn-release-prepare-command-dryRun-custom
  mvn-release-prepare-command: mvn --batch-mode release:prepare -DdryRun=true -f test/pom.xml

mvn-release-perform-command: &mvn-release-perform-command-dryRun-custom
  mvn-release-perform-command: mvn --batch-mode release:perform -DdryRun=true -s test/.maven.xml -f test/pom.xml

workflows:
  lint_pack-validate_publish-dev:
    jobs:
      # this `lint-pack_validate_publish-dev` workflow will run on any commit
      - orb-tools/lint

      # pack your orb YAML files to a single orb.yml
      # validate the orb.yml file to ensure it is well-formed
      - orb-tools/pack:
          requires:
            - orb-tools/lint

      # release dev version of orb, for testing & possible publishing
      # requires a CircleCI API token to be stored as CIRCLE_TOKEN (default)
      # https://circleci.com/docs/2.0/managing-api-tokens
      # store CIRCLE_TOKEN as a project env var or Contexts resource
      # if using Contexts, add your context below
      - orb-tools/publish-dev:
          orb-name: sonatype-nexus-community/circleci-maven-release-orb
          requires:
            - orb-tools/pack

      # integration tests
      # NOTE: When the Orb parameters change drastically, you may need to temporarily comment out this IT section to
      # allow the build to republish the new dev Orb. After a CI run completes with this IT section, you can restore
      # this IT section. Another approach may be to manually republish the dev Orb from you local machine when needed.
      - circleci-maven-release-orb/run-maven-release:
            <<: *mvn-read-version-command-dryRun-custom
            <<: *mvn-release-prepare-command-dryRun-custom
            <<: *mvn-release-perform-command-dryRun-custom
            context: rso-base
            requires:
              - orb-tools/publish-dev
      - check-results-job:
            requires:
              - circleci-maven-release-orb/run-maven-release

  shipit:
    jobs:
      - orb-tools/publish:
          orb-path: src/orb.yml
          orb-ref: sonatype-nexus-community/circleci-maven-release-orb@dev:${CIRCLE_BRANCH}
          publish-token-variable: "CIRCLE_TOKEN"
          validate: true

      - approve-release:
          type: approval
          requires:
            - orb-tools/publish

      - orb-tools/dev-promote-prod:
          name: dev-promote-patch
          orb-name: sonatype-nexus-community/circleci-maven-release-orb
          ssh-fingerprints: "b7:5b:6c:b5:81:8e:dc:2b:fd:fe:27:34:a7:96:d7:22"
          requires:
            - approve-release
